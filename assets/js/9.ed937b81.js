(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{407:function(n,s,t){"use strict";t.r(s);var a=t(56),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"nginx那些事"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx那些事"}},[n._v("#")]),n._v(" nginx那些事")]),n._v(" "),t("h2",{attrs:{id:"linux-ubuntu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-ubuntu"}},[n._v("#")]),n._v(" Linux （Ubuntu）")]),n._v(" "),t("h3",{attrs:{id:"下载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[n._v("#")]),n._v(" 下载")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看更新apt-get软件包")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" update\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# apt-get下载nginx， 会自动编译安装")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 默认安装目录是 /usr/sbin/nginx")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 配置文件目录是 /etc/nginx")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 关键配置文件是 /etc/nginx/nginx.conf")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" nginx\n")])])]),t("h3",{attrs:{id:"启停相关指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启停相关指令"}},[n._v("#")]),n._v(" 启停相关指令")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 启动|关闭|重启|热加载（只修改配置文件，不中断情况下热加载）nginx")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl start"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v("stop"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v("restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v("reload nginx\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 默认情况下Nginx会随这服务器启动而启动，可以手动进行禁止|启动")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl disable"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("enable")]),n._v(" nginx\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 每次修改完配置文件之后，检查是否有错误")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl -t\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 删除nginx进程来停止nginx的运行")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("killall")]),n._v(" nginx\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 通过查看Nginx进程判断nginx是否启动,用ps -ef列出进程列表，然后通过grep过滤判断nginx是否启动。")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("ps")]),n._v(" -ef "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("grep")]),n._v(" nginx\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 直接查看nginx进程id，有返回pid号说明nginx启动了")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("ps")]),n._v(" -C nginx -o pid\n")])])]),t("h3",{attrs:{id:"卸载问题-基于上述安装方式进行卸载的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#卸载问题-基于上述安装方式进行卸载的"}},[n._v("#")]),n._v(" 卸载问题（基于上述安装方式进行卸载的）")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 停止nginx服务")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl stop nginx\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 删除nginx， -purge包括配置文件")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" --purge remove nginx\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 自动移除全部不使用的软件包")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" autoremove\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 列出包含nginx名字的软件")]),n._v("\n dpkg --get-selections"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("grep")]),n._v(" nginx \n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 并依次上述删除对应软件（主要是nginx, nginx-common, nginx-core）")]),n._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" --purge remove nginx\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" --purge remove nginx-common\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" --purge remove nginx-core\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 确认卸载是否完成")]),n._v("\n dpkg --get-selections"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("grep")]),n._v(" nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# nginx, nginx-common, nginx-core这些信息都不会有")]),n._v("\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("which")]),n._v(" nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 不显示任何东西")]),n._v("\n")])])]),t("h3",{attrs:{id:"防火墙问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防火墙问题"}},[n._v("#")]),n._v(" 防火墙问题")]),n._v(" "),t("p",[n._v("防火墙是用来监视和过滤进出网络流量的工具。它通过定义一系列安全规则来决定是否允许或者屏蔽指定的流量。")]),n._v(" "),t("p",[n._v("Ubuntu自带的防火墙配置工具（默认安装的）称之为 "),t("code",[n._v("UFW（Uncomplicated Firewall）")]),n._v("。UFW是一个用来"),t("code",[n._v("管理iptables防火规则的前端工具")]),n._v("（访问友好），其核心目的是为了让管理iptables更简单。")]),n._v(" "),t("p",[t("code",[n._v("sudo ufw status verbose")]),n._v(" 指令查看UFW的开启状态，默认是"),t("code",[n._v("inactive")]),n._v("（不活动）。")]),n._v(" "),t("p",[n._v("默认情况下，UFW 阻塞了所有进来的连接，但允许所有出去的连接。这意味着任何人无法访问你的服务器，除非你"),t("code",[n._v("打开端口")]),n._v("。运行在服务器上的应用和服务可以访问外面的世界。")]),n._v(" "),t("p",[t("code",[n._v("sudo ufw status")]),n._v(" 查看使用防火墙之后的状态(同上)。")]),n._v(" "),t("p",[t("code",[n._v("sudo ufw enable|disable")]),n._v(" 开启/关闭防火墙 (默认设置是’disable’)。")]),n._v(" "),t("p",[t("code",[n._v("sudo ufw reset")]),n._v(" 重置UFW。")]),n._v(" "),t("p",[t("code",[n._v("sudo ufw allow(delete allow) xxx")]),n._v(" 开启(禁用)xx端口。")]),n._v(" "),t("p",[t("code",[n._v("sudo ufw app list")]),n._v(" 查看有如下配置方案:")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v(" hll@hll-VirtualBox:/etc/nginx$ "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" ufw app list\n 可用应用程序：\n CUPS\n Nginx Full\n Nginx HTTP\n Nginx HTTPS\n")])])]),t("ul",[t("li",[t("p",[n._v("Nginx Full：开端口 80 正常，未加密的网络流量；端口 443 TLS / SSL 加密的流量")])]),n._v(" "),t("li",[t("p",[n._v("Nginx HTTP：仅打开端口 80 正常，未加密")])]),n._v(" "),t("li",[t("p",[n._v("Nginx HTTPS：仅打开端口 443 TLS / SSL 加密")])])]),n._v(" "),t("p",[t("code",[n._v("sudo ufw app info 'Nginx Full'")]),n._v(" 用来查看 "),t("code",[n._v("Nginx Full")]),n._v(" 的具体配置信息。")]),n._v(" "),t("p",[t("code",[n._v("sudo ufw allow 'Nginx Full'")]),n._v(" 给nginx开启 "),t("code",[n._v("Nginx Full")]),n._v(" 配置方案。")])])}),[],!1,null,null,null);s.default=e.exports}}]);